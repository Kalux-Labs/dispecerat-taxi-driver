plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
    id "com.google.gms.google-services"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

def debugProperties = new Properties()
def debugPropertiesFile = rootProject.file('debug.properties')
if (debugPropertiesFile.exists()) {
    debugPropertiesFile.withReader('UTF-8') {
        reader -> debugProperties.load(reader)
    }
}

def releaseProperties = new Properties()
def releasePropertiesFile = rootProject.file('release.properties')
if (releasePropertiesFile.exists()) {
    releasePropertiesFile.withReader('UTF-8') {
        reader -> releaseProperties.load(reader)
    }
}

android {
    namespace "com.kaluxlabs.driver"
    compileSdk flutter.compileSdkVersion
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        applicationId "com.kaluxlabs.driver"
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
        minSdkVersion 34
        targetSdkVersion 34
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    signingConfigs {
        debug {
            keyAlias debugProperties['keyAlias']
            keyPassword debugProperties['keyPassword']
            storeFile debugProperties['storeFile'] ? file(debugProperties['storeFile']) : null
            storePassword debugProperties['storePassword']
        }
        release {
            keyAlias releaseProperties['keyAlias']
            keyPassword releaseProperties['keyPassword']
            storeFile releaseProperties['storeFile'] ? file(releaseProperties['storeFile']) : null
            storePassword releaseProperties['storePassword']
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
        }
        debug {
            signingConfig signingConfigs.debug
        }
    }
}

flutter {
    source '../..'
}

dependencies {}
